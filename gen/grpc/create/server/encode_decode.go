// Code generated by goa v3.16.1, DO NOT EDIT.
//
// create gRPC server encoders and decoders
//
// Command:
// $ goa gen olayml.xyz/gotrim/design

package server

import (
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
	create "olayml.xyz/gotrim/gen/create"
	createpb "olayml.xyz/gotrim/gen/grpc/create/pb"
)

// EncodeCreateResponse encodes responses from the "create" service "create"
// endpoint.
func EncodeCreateResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.(string)
	if !ok {
		return nil, goagrpc.ErrInvalidType("create", "create", "string", v)
	}
	resp := NewProtoCreateResponse(result)
	return resp, nil
}

// DecodeCreateRequest decodes requests sent to "create" service "create"
// endpoint.
func DecodeCreateRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *createpb.CreateRequest
		ok      bool
	)
	{
		if message, ok = v.(*createpb.CreateRequest); !ok {
			return nil, goagrpc.ErrInvalidType("create", "create", "*createpb.CreateRequest", v)
		}
	}
	var payload *create.CreatePayload
	{
		payload = NewCreatePayload(message)
	}
	return payload, nil
}
