// Code generated by goa v3.16.1, DO NOT EDIT.
//
// create gRPC server
//
// Command:
// $ goa gen olayml.xyz/gotrim/design

package server

import (
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	create "olayml.xyz/gotrim/gen/create"
	createpb "olayml.xyz/gotrim/gen/grpc/create/pb"
)

// Server implements the createpb.CreateServer interface.
type Server struct {
	CreateH goagrpc.UnaryHandler
	createpb.UnimplementedCreateServer
}

// New instantiates the server struct with the create service endpoints.
func New(e *create.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		CreateH: NewCreateHandler(e.Create, uh),
	}
}

// NewCreateHandler creates a gRPC handler which serves the "create" service
// "create" endpoint.
func NewCreateHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeCreateRequest, EncodeCreateResponse)
	}
	return h
}

// Create implements the "Create" method in createpb.CreateServer interface.
func (s *Server) Create(ctx context.Context, message *createpb.CreateRequest) (*createpb.CreateResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "create")
	ctx = context.WithValue(ctx, goa.ServiceKey, "create")
	resp, err := s.CreateH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*createpb.CreateResponse), nil
}
