// Code generated by goa v3.16.1, DO NOT EDIT.
//
// UrlShortener gRPC client encoders and decoders
//
// Command:
// $ goa gen olayml.xyz/gotrim/design

package client

import (
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"
	url_shortenerpb "olayml.xyz/gotrim/gen/grpc/url_shortener/pb"
	urlshortener "olayml.xyz/gotrim/gen/url_shortener"
	urlshortenerviews "olayml.xyz/gotrim/gen/url_shortener/views"
)

// BuildCreateShortURLFunc builds the remote method to invoke for
// "UrlShortener" service "CreateShortUrl" endpoint.
func BuildCreateShortURLFunc(grpccli url_shortenerpb.URLShortenerClient, cliopts ...grpc.CallOption) goagrpc.RemoteFunc {
	return func(ctx context.Context, reqpb any, opts ...grpc.CallOption) (any, error) {
		for _, opt := range cliopts {
			opts = append(opts, opt)
		}
		if reqpb != nil {
			return grpccli.CreateShortURL(ctx, reqpb.(*url_shortenerpb.CreateShortURLRequest), opts...)
		}
		return grpccli.CreateShortURL(ctx, &url_shortenerpb.CreateShortURLRequest{}, opts...)
	}
}

// EncodeCreateShortURLRequest encodes requests sent to UrlShortener
// CreateShortUrl endpoint.
func EncodeCreateShortURLRequest(ctx context.Context, v any, md *metadata.MD) (any, error) {
	payload, ok := v.(*urlshortener.CreateShortURLPayload)
	if !ok {
		return nil, goagrpc.ErrInvalidType("UrlShortener", "CreateShortUrl", "*urlshortener.CreateShortURLPayload", v)
	}
	return NewProtoCreateShortURLRequest(payload), nil
}

// DecodeCreateShortURLResponse decodes responses from the UrlShortener
// CreateShortUrl endpoint.
func DecodeCreateShortURLResponse(ctx context.Context, v any, hdr, trlr metadata.MD) (any, error) {
	var view string
	{
		if vals := hdr.Get("goa-view"); len(vals) > 0 {
			view = vals[0]
		}
	}
	message, ok := v.(*url_shortenerpb.CreateShortURLResponse)
	if !ok {
		return nil, goagrpc.ErrInvalidType("UrlShortener", "CreateShortUrl", "*url_shortenerpb.CreateShortURLResponse", v)
	}
	res := NewCreateShortURLResult(message)
	vres := &urlshortenerviews.Create{Projected: res, View: view}
	if err := urlshortenerviews.ValidateCreate(vres); err != nil {
		return nil, err
	}
	return urlshortener.NewCreate(vres), nil
}
